package model.bulkeditgroups.entities.common;

import java.math.BigDecimal;
import java.math.BigInteger;

import java.sql.SQLException;

import oracle.jbo.JboException;
import oracle.jbo.StructureDef;
import oracle.jbo.domain.Array;
import oracle.jbo.domain.DatumFactory;
import oracle.jbo.domain.DomainAttributeDef;
import oracle.jbo.domain.DomainInterface;
import oracle.jbo.domain.DomainOwnerInterface;
import oracle.jbo.domain.DomainStructureDef;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Struct;

import oracle.sql.*;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 08 17:29:43 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SdoGeometry extends Struct {


    static ORADataFactory[] mCustDatFac = null;
    static int[] mSQLTypes = null;
    static DomainStructureDef mStructureDef = null;
    static ORADataFactory fac;

    public SdoGeometry(Datum value) throws SQLException {
        super(value);
    }

    public SdoGeometry() throws SQLException {
    }

    public static ORADataFactory getORADataFactory() {
        if (fac == null) {
            class facClass implements ORADataFactory {
                public ORAData create(Datum d, int sql_type_code) throws SQLException {
                    if (d != null) {
                        return new SdoGeometry(d);
                    }
                    return null;
                }
            }
            fac = new facClass();
        }
        return fac;
    }

    public int[] getAttrSQLTypes() {
        if (mSQLTypes == null) {
            mSQLTypes = buildAttrSQLTypes();
        }
        return mSQLTypes;
    }

    public StructureDef getStructureDef() {
        return mStructureDef;
    }

    public String getColumnType() {
        return "SDO_GEOMETRY";
    }

    public Number getSdoGtype() {
        return (Number) getAttribute(0);
    }

    public void setSdoGtype(Number value) {
        setAttribute(0, value);
    }

    public Number getSdoSrid() {
        return (Number) getAttribute(1);
    }

    public void setSdoSrid(Number value) {
        setAttribute(1, value);
    }

    public SdoPointType getSdoPoint() {
        return (SdoPointType)getAttribute(2);
    }

    public void setSdoPoint(SdoPointType value) {
        setAttribute(2, value);
    }

    public Array getSdoElemInfo() {
        return (Array) getAttribute(3);
    }

    public void setSdoElemInfo(Array value) {
        setAttribute(3, value);
    }

    public Array getSdoOrdinates() {
        return (Array) getAttribute(4);
    }

    public void setSdoOrdinates(Array value) {
        setAttribute(4, value);
    }

    public void initStructureDef() {
        DomainAttributeDef[] attrs = new DomainAttributeDef[5];
        if (mStructureDef == null) {
            attrs[0] =
                    new DomainAttributeDef("SdoGtype", "SDO_GTYPE", 0, Number.class, 2, "NUMERIC",
                                           0, 0, false);
            attrs[1] =
                    new DomainAttributeDef("SdoSrid", "SDO_SRID", 1, Number.class, 2, "NUMERIC", 0,
                                           0, false);
            attrs[2] =
                    new DomainAttributeDef("SdoPoint", "SDO_POINT", 2, SdoPointType.class, 2002, "STRUCT",
                                           -127, 0, false);
            attrs[3] =
                    new DomainAttributeDef("SdoElemInfo", "SDO_ELEM_INFO", 3, Array.class, 0, "SDO_ELEM_INFO_ARRAY",
                                           -127, 0, false, "oracle.jbo.domain.Number");
            attrs[4] =
                    new DomainAttributeDef("SdoOrdinates", "SDO_ORDINATES", 4, Array.class, 0, "SDO_ORDINATE_ARRAY",
                                           -127, 0, false, "oracle.jbo.domain.Number");
            mStructureDef = new DomainStructureDef(attrs);
        }
    }

    public ORADataFactory[] getAttrORADataFactories() {
        if (mCustDatFac == null) {
            mCustDatFac = new ORADataFactory[5];
            mCustDatFac[0] = Number.getORADataFactory();
            mCustDatFac[1] = Number.getORADataFactory();
            mCustDatFac[2] = SdoPointType.getORADataFactory();
            mCustDatFac[3] = Array.getORADataFactory();
            mCustDatFac[4] = Array.getORADataFactory();
        }
        return mCustDatFac;
    }
}
