package model.availableapioverrides.views;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 27 12:40:47 PST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AvailApiPmDistrictsVwRoVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PmDistrictId {
            public Object get(AvailApiPmDistrictsVwRoVORowImpl obj) {
                return obj.getPmDistrictId();
            }

            public void put(AvailApiPmDistrictsVwRoVORowImpl obj, Object value) {
                obj.setPmDistrictId((Number)value);
            }
        }
        ,
        PmDistrictName {
            public Object get(AvailApiPmDistrictsVwRoVORowImpl obj) {
                return obj.getPmDistrictName();
            }

            public void put(AvailApiPmDistrictsVwRoVORowImpl obj, Object value) {
                obj.setPmDistrictName((String)value);
            }
        }
        ,
        RowID {
            public Object get(AvailApiPmDistrictsVwRoVORowImpl obj) {
                return obj.getRowID();
            }

            public void put(AvailApiPmDistrictsVwRoVORowImpl obj, Object value) {
                obj.setRowID((RowID)value);
            }
        }
        ,
        SelectedPmDistrict {
            public Object get(AvailApiPmDistrictsVwRoVORowImpl obj) {
                return obj.getSelectedPmDistrict();
            }

            public void put(AvailApiPmDistrictsVwRoVORowImpl obj, Object value) {
                obj.setSelectedPmDistrict((Boolean)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AvailApiPmDistrictsVwRoVORowImpl object);

        public abstract void put(AvailApiPmDistrictsVwRoVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int PMDISTRICTID = AttributesEnum.PmDistrictId.index();
    public static final int PMDISTRICTNAME = AttributesEnum.PmDistrictName.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int SELECTEDPMDISTRICT = AttributesEnum.SelectedPmDistrict.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AvailApiPmDistrictsVwRoVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PmDistrictId.
     * @return the PmDistrictId
     */
    public Number getPmDistrictId() {
        return (Number) getAttributeInternal(PMDISTRICTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PmDistrictId.
     * @param value value to set the  PmDistrictId
     */
    public void setPmDistrictId(Number value) {
        setAttributeInternal(PMDISTRICTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PmDistrictName.
     * @return the PmDistrictName
     */
    public String getPmDistrictName() {
        return (String) getAttributeInternal(PMDISTRICTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PmDistrictName.
     * @param value value to set the  PmDistrictName
     */
    public void setPmDistrictName(String value) {
        setAttributeInternal(PMDISTRICTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RowID.
     * @return the RowID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RowID.
     * @param value value to set the  RowID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectedPmDistrict.
     * @return the SelectedPmDistrict
     */
    public Boolean getSelectedPmDistrict() {
        return (Boolean) getAttributeInternal(SELECTEDPMDISTRICT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectedPmDistrict.
     * @param value value to set the  SelectedPmDistrict
     */
    public void setSelectedPmDistrict(Boolean value) {
        setAttributeInternal(SELECTEDPMDISTRICT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
